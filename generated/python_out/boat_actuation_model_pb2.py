# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: boat_actuation_model.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='boat_actuation_model.proto',
  package='org.copdai.core.model',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1a\x62oat_actuation_model.proto\x12\x15org.copdai.core.model\"\x8c\x01\n\x18\x42oatModel1CommandHistory\x12:\n\x08\x63ommands\x18\x01 \x03(\x0b\x32(.org.copdai.core.model.BoatModel1Command\x12\x10\n\x08sentTime\x18\r \x02(\x01\x12\x11\n\tstartTime\x18\x0e \x02(\x01\x12\x0f\n\x07\x65ndTime\x18\x0f \x02(\x01\"E\n\x11\x42oatModel1Command\x12\x12\n\nmotorPower\x18\x01 \x02(\x01\x12\x0e\n\x06torque\x18\x02 \x02(\x01\x12\x0c\n\x04time\x18\x0f \x02(\x01'
)




_BOATMODEL1COMMANDHISTORY = _descriptor.Descriptor(
  name='BoatModel1CommandHistory',
  full_name='org.copdai.core.model.BoatModel1CommandHistory',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commands', full_name='org.copdai.core.model.BoatModel1CommandHistory.commands', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sentTime', full_name='org.copdai.core.model.BoatModel1CommandHistory.sentTime', index=1,
      number=13, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='startTime', full_name='org.copdai.core.model.BoatModel1CommandHistory.startTime', index=2,
      number=14, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='endTime', full_name='org.copdai.core.model.BoatModel1CommandHistory.endTime', index=3,
      number=15, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=54,
  serialized_end=194,
)


_BOATMODEL1COMMAND = _descriptor.Descriptor(
  name='BoatModel1Command',
  full_name='org.copdai.core.model.BoatModel1Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='motorPower', full_name='org.copdai.core.model.BoatModel1Command.motorPower', index=0,
      number=1, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='torque', full_name='org.copdai.core.model.BoatModel1Command.torque', index=1,
      number=2, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time', full_name='org.copdai.core.model.BoatModel1Command.time', index=2,
      number=15, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=265,
)

_BOATMODEL1COMMANDHISTORY.fields_by_name['commands'].message_type = _BOATMODEL1COMMAND
DESCRIPTOR.message_types_by_name['BoatModel1CommandHistory'] = _BOATMODEL1COMMANDHISTORY
DESCRIPTOR.message_types_by_name['BoatModel1Command'] = _BOATMODEL1COMMAND
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BoatModel1CommandHistory = _reflection.GeneratedProtocolMessageType('BoatModel1CommandHistory', (_message.Message,), {
  'DESCRIPTOR' : _BOATMODEL1COMMANDHISTORY,
  '__module__' : 'boat_actuation_model_pb2'
  # @@protoc_insertion_point(class_scope:org.copdai.core.model.BoatModel1CommandHistory)
  })
_sym_db.RegisterMessage(BoatModel1CommandHistory)

BoatModel1Command = _reflection.GeneratedProtocolMessageType('BoatModel1Command', (_message.Message,), {
  'DESCRIPTOR' : _BOATMODEL1COMMAND,
  '__module__' : 'boat_actuation_model_pb2'
  # @@protoc_insertion_point(class_scope:org.copdai.core.model.BoatModel1Command)
  })
_sym_db.RegisterMessage(BoatModel1Command)


# @@protoc_insertion_point(module_scope)
